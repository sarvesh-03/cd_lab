Terminals unused in grammar

    CHARACTER
    BOOL
    AND
    OR


Grammar

    0 $accept: program $end

    1 program: entry '(' ')' '{' body return '}'

    2 entry: datatype ID

    3 datatype: INT
    4         | FLOAT
    5         | CHAR

    6 body: block body
    7     | ε

    8 $@1: ε

    9 block: WHILE $@1 '(' condition ')' ':' '{' body '}'

   10 $@2: ε

   11 $@3: ε

   12 $@4: ε

   13 block: IF $@2 '(' condition ')' $@3 ':' '{' body '}' $@4 else
   14      | statement '.'
   15      | PRINTFF '(' STR ')' '.'
   16      | SCANFF '(' STR ',' '&' ID ')' '.'

   17 else: ELSE ':' '{' body '}'
   18     | ε

   19 condition: value relop value
   20          | TRUE
   21          | FALSE

   22 statement: DECLARE ID datatype init
   23          | ID '=' expression
   24          | ID relop expression

   25 init: '=' value
   26     | ε

   27 expression: expression addops term
   28           | term

   29 term: term mulops factor
   30     | factor

   31 factor: base exponent base
   32       | LOG '(' value ',' value ')'
   33       | base

   34 base: value
   35     | '(' expression ')'

   36 exponent: POW

   37 mulops: MULT
   38       | DIV

   39 addops: ADD
   40       | SUB

   41 relop: LT
   42      | GT
   43      | LE
   44      | GE
   45      | EQ
   46      | NE

   47 value: NUMBER
   48      | FLOAT_NUM
   49      | ID

   50 return: RETURN value '.'
   51       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 16
    '(' (40) 1 9 13 15 16 32 35
    ')' (41) 1 9 13 15 16 32 35
    ',' (44) 16 32
    '.' (46) 14 15 16 50
    ':' (58) 9 13 17
    '=' (61) 23 25
    '{' (123) 1 9 13 17
    '}' (125) 1 9 13 17
    error (256)
    DECLARE <nd_obj> (258) 22
    CHARACTER <nd_obj> (259)
    PRINTFF <nd_obj> (260) 15
    SCANFF <nd_obj> (261) 16
    INT <nd_obj> (262) 3
    BOOL <nd_obj> (263)
    FLOAT <nd_obj> (264) 4
    CHAR <nd_obj> (265) 5
    WHILE <nd_obj> (266) 9
    IF <nd_obj> (267) 13
    ELSE <nd_obj> (268) 17
    TRUE <nd_obj> (269) 20
    FALSE <nd_obj> (270) 21
    NUMBER <nd_obj> (271) 47
    FLOAT_NUM <nd_obj> (272) 48
    ID <nd_obj> (273) 2 16 22 23 24 49
    LE <nd_obj> (274) 43
    GE <nd_obj> (275) 44
    EQ <nd_obj> (276) 45
    NE <nd_obj> (277) 46
    GT <nd_obj> (278) 42
    LT <nd_obj> (279) 41
    AND <nd_obj> (280)
    OR <nd_obj> (281)
    STR <nd_obj> (282) 15 16
    ADD <nd_obj> (283) 39
    MULT <nd_obj> (284) 37
    DIV <nd_obj> (285) 38
    SUB <nd_obj> (286) 40
    RETURN <nd_obj> (287) 50
    LOG <nd_obj> (288) 32
    POW <nd_obj> (289) 36


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <nd_obj> (45)
        on left: 1
        on right: 0
    entry <nd_obj> (46)
        on left: 2
        on right: 1
    datatype <nd_obj> (47)
        on left: 3 4 5
        on right: 2 22
    body <nd_obj> (48)
        on left: 6 7
        on right: 1 6 9 13 17
    block <nd_obj> (49)
        on left: 9 13 14 15 16
        on right: 6
    $@1 (50)
        on left: 8
        on right: 9
    $@2 (51)
        on left: 10
        on right: 13
    $@3 (52)
        on left: 11
        on right: 13
    $@4 (53)
        on left: 12
        on right: 13
    else <nd_obj> (54)
        on left: 17 18
        on right: 13
    condition <nd_obj3> (55)
        on left: 19 20 21
        on right: 9 13
    statement <nd_obj> (56)
        on left: 22 23 24
        on right: 14
    init <nd_obj2> (57)
        on left: 25 26
        on right: 22
    expression <nd_obj2> (58)
        on left: 27 28
        on right: 23 24 27 35
    term <nd_obj> (59)
        on left: 29 30
        on right: 27 28 29
    factor <nd_obj> (60)
        on left: 31 32 33
        on right: 29 30
    base <nd_obj> (61)
        on left: 34 35
        on right: 31 33
    exponent <nd_obj> (62)
        on left: 36
        on right: 31
    mulops <nd_obj> (63)
        on left: 37 38
        on right: 29
    addops <nd_obj> (64)
        on left: 39 40
        on right: 27
    relop <nd_obj> (65)
        on left: 41 42 43 44 45 46
        on right: 19 24
    value <nd_obj2> (66)
        on left: 47 48 49
        on right: 19 25 32 34 50
    return <nd_obj> (67)
        on left: 50 51
        on right: 1


State 0

    0 $accept: • program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    program   go to state 4
    entry     go to state 5
    datatype  go to state 6


State 1

    3 datatype: INT •

    $default  reduce using rule 3 (datatype)


State 2

    4 datatype: FLOAT •

    $default  reduce using rule 4 (datatype)


State 3

    5 datatype: CHAR •

    $default  reduce using rule 5 (datatype)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 7


State 5

    1 program: entry • '(' ')' '{' body return '}'

    '('  shift, and go to state 8


State 6

    2 entry: datatype • ID

    ID  shift, and go to state 9


State 7

    0 $accept: program $end •

    $default  accept


State 8

    1 program: entry '(' • ')' '{' body return '}'

    ')'  shift, and go to state 10


State 9

    2 entry: datatype ID •

    $default  reduce using rule 2 (entry)


State 10

    1 program: entry '(' ')' • '{' body return '}'

    '{'  shift, and go to state 11


State 11

    1 program: entry '(' ')' '{' • body return '}'

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 18
    block      go to state 19
    statement  go to state 20


State 12

   22 statement: DECLARE • ID datatype init

    ID  shift, and go to state 21


State 13

   15 block: PRINTFF • '(' STR ')' '.'

    '('  shift, and go to state 22


State 14

   16 block: SCANFF • '(' STR ',' '&' ID ')' '.'

    '('  shift, and go to state 23


State 15

    9 block: WHILE • $@1 '(' condition ')' ':' '{' body '}'

    $default  reduce using rule 8 ($@1)

    $@1  go to state 24


State 16

   13 block: IF • $@2 '(' condition ')' $@3 ':' '{' body '}' $@4 else

    $default  reduce using rule 10 ($@2)

    $@2  go to state 25


State 17

   23 statement: ID • '=' expression
   24          | ID • relop expression

    LE   shift, and go to state 26
    GE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    '='  shift, and go to state 32

    relop  go to state 33


State 18

    1 program: entry '(' ')' '{' body • return '}'

    RETURN  shift, and go to state 34

    $default  reduce using rule 51 (return)

    return  go to state 35


State 19

    6 body: block • body

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 36
    block      go to state 19
    statement  go to state 20


State 20

   14 block: statement • '.'

    '.'  shift, and go to state 37


State 21

   22 statement: DECLARE ID • datatype init

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    datatype  go to state 38


State 22

   15 block: PRINTFF '(' • STR ')' '.'

    STR  shift, and go to state 39


State 23

   16 block: SCANFF '(' • STR ',' '&' ID ')' '.'

    STR  shift, and go to state 40


State 24

    9 block: WHILE $@1 • '(' condition ')' ':' '{' body '}'

    '('  shift, and go to state 41


State 25

   13 block: IF $@2 • '(' condition ')' $@3 ':' '{' body '}' $@4 else

    '('  shift, and go to state 42


State 26

   43 relop: LE •

    $default  reduce using rule 43 (relop)


State 27

   44 relop: GE •

    $default  reduce using rule 44 (relop)


State 28

   45 relop: EQ •

    $default  reduce using rule 45 (relop)


State 29

   46 relop: NE •

    $default  reduce using rule 46 (relop)


State 30

   42 relop: GT •

    $default  reduce using rule 42 (relop)


State 31

   41 relop: LT •

    $default  reduce using rule 41 (relop)


State 32

   23 statement: ID '=' • expression

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 46
    '('        shift, and go to state 47

    expression  go to state 48
    term        go to state 49
    factor      go to state 50
    base        go to state 51
    value       go to state 52


State 33

   24 statement: ID relop • expression

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 46
    '('        shift, and go to state 47

    expression  go to state 53
    term        go to state 49
    factor      go to state 50
    base        go to state 51
    value       go to state 52


State 34

   50 return: RETURN • value '.'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 54


State 35

    1 program: entry '(' ')' '{' body return • '}'

    '}'  shift, and go to state 55


State 36

    6 body: block body •

    $default  reduce using rule 6 (body)


State 37

   14 block: statement '.' •

    $default  reduce using rule 14 (block)


State 38

   22 statement: DECLARE ID datatype • init

    '='  shift, and go to state 56

    $default  reduce using rule 26 (init)

    init  go to state 57


State 39

   15 block: PRINTFF '(' STR • ')' '.'

    ')'  shift, and go to state 58


State 40

   16 block: SCANFF '(' STR • ',' '&' ID ')' '.'

    ','  shift, and go to state 59


State 41

    9 block: WHILE $@1 '(' • condition ')' ':' '{' body '}'

    TRUE       shift, and go to state 60
    FALSE      shift, and go to state 61
    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    condition  go to state 62
    value      go to state 63


State 42

   13 block: IF $@2 '(' • condition ')' $@3 ':' '{' body '}' $@4 else

    TRUE       shift, and go to state 60
    FALSE      shift, and go to state 61
    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    condition  go to state 64
    value      go to state 63


State 43

   47 value: NUMBER •

    $default  reduce using rule 47 (value)


State 44

   48 value: FLOAT_NUM •

    $default  reduce using rule 48 (value)


State 45

   49 value: ID •

    $default  reduce using rule 49 (value)


State 46

   32 factor: LOG • '(' value ',' value ')'

    '('  shift, and go to state 65


State 47

   35 base: '(' • expression ')'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 46
    '('        shift, and go to state 47

    expression  go to state 66
    term        go to state 49
    factor      go to state 50
    base        go to state 51
    value       go to state 52


State 48

   23 statement: ID '=' expression •
   27 expression: expression • addops term

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 23 (statement)

    addops  go to state 69


State 49

   28 expression: term •
   29 term: term • mulops factor

    MULT  shift, and go to state 70
    DIV   shift, and go to state 71

    $default  reduce using rule 28 (expression)

    mulops  go to state 72


State 50

   30 term: factor •

    $default  reduce using rule 30 (term)


State 51

   31 factor: base • exponent base
   33       | base •

    POW  shift, and go to state 73

    $default  reduce using rule 33 (factor)

    exponent  go to state 74


State 52

   34 base: value •

    $default  reduce using rule 34 (base)


State 53

   24 statement: ID relop expression •
   27 expression: expression • addops term

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68

    $default  reduce using rule 24 (statement)

    addops  go to state 69


State 54

   50 return: RETURN value • '.'

    '.'  shift, and go to state 75


State 55

    1 program: entry '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (program)


State 56

   25 init: '=' • value

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 76


State 57

   22 statement: DECLARE ID datatype init •

    $default  reduce using rule 22 (statement)


State 58

   15 block: PRINTFF '(' STR ')' • '.'

    '.'  shift, and go to state 77


State 59

   16 block: SCANFF '(' STR ',' • '&' ID ')' '.'

    '&'  shift, and go to state 78


State 60

   20 condition: TRUE •

    $default  reduce using rule 20 (condition)


State 61

   21 condition: FALSE •

    $default  reduce using rule 21 (condition)


State 62

    9 block: WHILE $@1 '(' condition • ')' ':' '{' body '}'

    ')'  shift, and go to state 79


State 63

   19 condition: value • relop value

    LE  shift, and go to state 26
    GE  shift, and go to state 27
    EQ  shift, and go to state 28
    NE  shift, and go to state 29
    GT  shift, and go to state 30
    LT  shift, and go to state 31

    relop  go to state 80


State 64

   13 block: IF $@2 '(' condition • ')' $@3 ':' '{' body '}' $@4 else

    ')'  shift, and go to state 81


State 65

   32 factor: LOG '(' • value ',' value ')'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 82


State 66

   27 expression: expression • addops term
   35 base: '(' expression • ')'

    ADD  shift, and go to state 67
    SUB  shift, and go to state 68
    ')'  shift, and go to state 83

    addops  go to state 69


State 67

   39 addops: ADD •

    $default  reduce using rule 39 (addops)


State 68

   40 addops: SUB •

    $default  reduce using rule 40 (addops)


State 69

   27 expression: expression addops • term

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 46
    '('        shift, and go to state 47

    term    go to state 84
    factor  go to state 50
    base    go to state 51
    value   go to state 52


State 70

   37 mulops: MULT •

    $default  reduce using rule 37 (mulops)


State 71

   38 mulops: DIV •

    $default  reduce using rule 38 (mulops)


State 72

   29 term: term mulops • factor

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 46
    '('        shift, and go to state 47

    factor  go to state 85
    base    go to state 51
    value   go to state 52


State 73

   36 exponent: POW •

    $default  reduce using rule 36 (exponent)


State 74

   31 factor: base exponent • base

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    '('        shift, and go to state 47

    base   go to state 86
    value  go to state 52


State 75

   50 return: RETURN value '.' •

    $default  reduce using rule 50 (return)


State 76

   25 init: '=' value •

    $default  reduce using rule 25 (init)


State 77

   15 block: PRINTFF '(' STR ')' '.' •

    $default  reduce using rule 15 (block)


State 78

   16 block: SCANFF '(' STR ',' '&' • ID ')' '.'

    ID  shift, and go to state 87


State 79

    9 block: WHILE $@1 '(' condition ')' • ':' '{' body '}'

    ':'  shift, and go to state 88


State 80

   19 condition: value relop • value

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 89


State 81

   13 block: IF $@2 '(' condition ')' • $@3 ':' '{' body '}' $@4 else

    $default  reduce using rule 11 ($@3)

    $@3  go to state 90


State 82

   32 factor: LOG '(' value • ',' value ')'

    ','  shift, and go to state 91


State 83

   35 base: '(' expression ')' •

    $default  reduce using rule 35 (base)


State 84

   27 expression: expression addops term •
   29 term: term • mulops factor

    MULT  shift, and go to state 70
    DIV   shift, and go to state 71

    $default  reduce using rule 27 (expression)

    mulops  go to state 72


State 85

   29 term: term mulops factor •

    $default  reduce using rule 29 (term)


State 86

   31 factor: base exponent base •

    $default  reduce using rule 31 (factor)


State 87

   16 block: SCANFF '(' STR ',' '&' ID • ')' '.'

    ')'  shift, and go to state 92


State 88

    9 block: WHILE $@1 '(' condition ')' ':' • '{' body '}'

    '{'  shift, and go to state 93


State 89

   19 condition: value relop value •

    $default  reduce using rule 19 (condition)


State 90

   13 block: IF $@2 '(' condition ')' $@3 • ':' '{' body '}' $@4 else

    ':'  shift, and go to state 94


State 91

   32 factor: LOG '(' value ',' • value ')'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 95


State 92

   16 block: SCANFF '(' STR ',' '&' ID ')' • '.'

    '.'  shift, and go to state 96


State 93

    9 block: WHILE $@1 '(' condition ')' ':' '{' • body '}'

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 97
    block      go to state 19
    statement  go to state 20


State 94

   13 block: IF $@2 '(' condition ')' $@3 ':' • '{' body '}' $@4 else

    '{'  shift, and go to state 98


State 95

   32 factor: LOG '(' value ',' value • ')'

    ')'  shift, and go to state 99


State 96

   16 block: SCANFF '(' STR ',' '&' ID ')' '.' •

    $default  reduce using rule 16 (block)


State 97

    9 block: WHILE $@1 '(' condition ')' ':' '{' body • '}'

    '}'  shift, and go to state 100


State 98

   13 block: IF $@2 '(' condition ')' $@3 ':' '{' • body '}' $@4 else

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 101
    block      go to state 19
    statement  go to state 20


State 99

   32 factor: LOG '(' value ',' value ')' •

    $default  reduce using rule 32 (factor)


State 100

    9 block: WHILE $@1 '(' condition ')' ':' '{' body '}' •

    $default  reduce using rule 9 (block)


State 101

   13 block: IF $@2 '(' condition ')' $@3 ':' '{' body • '}' $@4 else

    '}'  shift, and go to state 102


State 102

   13 block: IF $@2 '(' condition ')' $@3 ':' '{' body '}' • $@4 else

    $default  reduce using rule 12 ($@4)

    $@4  go to state 103


State 103

   13 block: IF $@2 '(' condition ')' $@3 ':' '{' body '}' $@4 • else

    ELSE  shift, and go to state 104

    $default  reduce using rule 18 (else)

    else  go to state 105


State 104

   17 else: ELSE • ':' '{' body '}'

    ':'  shift, and go to state 106


State 105

   13 block: IF $@2 '(' condition ')' $@3 ':' '{' body '}' $@4 else •

    $default  reduce using rule 13 (block)


State 106

   17 else: ELSE ':' • '{' body '}'

    '{'  shift, and go to state 107


State 107

   17 else: ELSE ':' '{' • body '}'

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 108
    block      go to state 19
    statement  go to state 20


State 108

   17 else: ELSE ':' '{' body • '}'

    '}'  shift, and go to state 109


State 109

   17 else: ELSE ':' '{' body '}' •

    $default  reduce using rule 17 (else)
