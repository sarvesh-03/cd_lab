Terminals unused in grammar

    CHARACTER
    BOOL
    AND
    OR


Grammar

    0 $accept: program $end

    1 program: entry '(' ')' '{' body return '}'

    2 entry: datatype ID

    3 datatype: INT
    4         | FLOAT
    5         | CHAR

    6 body: block body
    7     | %empty

    8 block: WHILE '(' condition ')' ':' '{' body '}'

    9 $@1: %empty

   10 $@2: %empty

   11 block: IF '(' condition ')' $@1 ':' '{' body '}' $@2 else
   12      | statement '.'
   13      | PRINTFF '(' STR ')' '.'
   14      | SCANFF '(' STR ',' '&' ID ')' '.'

   15 else: ELSE ':' '{' body '}'
   16     | %empty

   17 condition: value relop value
   18          | TRUE
   19          | FALSE

   20 statement: DECLARE ID datatype init
   21          | ID '=' expression
   22          | ID relop expression

   23 init: '=' value
   24     | %empty

   25 expression: expression addops term
   26           | term

   27 term: term mulops factor
   28     | factor

   29 factor: base exponent base
   30       | LOG '(' value ',' value ')'
   31       | base

   32 base: value
   33     | '(' expression ')'

   34 exponent: POW

   35 mulops: MULT
   36       | DIV

   37 addops: ADD
   38       | SUB

   39 relop: LT
   40      | GT
   41      | LE
   42      | GE
   43      | EQ
   44      | NE

   45 value: NUMBER
   46      | FLOAT_NUM
   47      | ID

   48 return: RETURN value '.'
   49       | %empty


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 14
    '(' (40) 1 8 11 13 14 30 33
    ')' (41) 1 8 11 13 14 30 33
    ',' (44) 14 30
    '.' (46) 12 13 14 48
    ':' (58) 8 11 15
    '=' (61) 21 23
    '{' (123) 1 8 11 15
    '}' (125) 1 8 11 15
    error (256)
    DECLARE <nd_obj> (258) 20
    CHARACTER <nd_obj> (259)
    PRINTFF <nd_obj> (260) 13
    SCANFF <nd_obj> (261) 14
    INT <nd_obj> (262) 3
    BOOL <nd_obj> (263)
    FLOAT <nd_obj> (264) 4
    CHAR <nd_obj> (265) 5
    WHILE <nd_obj> (266) 8
    IF <nd_obj> (267) 11
    ELSE <nd_obj> (268) 15
    TRUE <nd_obj> (269) 18
    FALSE <nd_obj> (270) 19
    NUMBER <nd_obj> (271) 45
    FLOAT_NUM <nd_obj> (272) 46
    ID <nd_obj> (273) 2 14 20 21 22 47
    LE <nd_obj> (274) 41
    GE <nd_obj> (275) 42
    EQ <nd_obj> (276) 43
    NE <nd_obj> (277) 44
    GT <nd_obj> (278) 40
    LT <nd_obj> (279) 39
    AND <nd_obj> (280)
    OR <nd_obj> (281)
    STR <nd_obj> (282) 13 14
    ADD <nd_obj> (283) 37
    MULT <nd_obj> (284) 35
    DIV <nd_obj> (285) 36
    SUB <nd_obj> (286) 38
    RETURN <nd_obj> (287) 48
    LOG <nd_obj> (288) 30
    POW <nd_obj> (289) 34


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <nd_obj> (45)
        on left: 1
        on right: 0
    entry <nd_obj> (46)
        on left: 2
        on right: 1
    datatype <nd_obj> (47)
        on left: 3 4 5
        on right: 2 20
    body <nd_obj> (48)
        on left: 6 7
        on right: 1 6 8 11 15
    block <nd_obj> (49)
        on left: 8 11 12 13 14
        on right: 6
    $@1 (50)
        on left: 9
        on right: 11
    $@2 (51)
        on left: 10
        on right: 11
    else <nd_obj> (52)
        on left: 15 16
        on right: 11
    condition <nd_obj3> (53)
        on left: 17 18 19
        on right: 8 11
    statement <nd_obj> (54)
        on left: 20 21 22
        on right: 12
    init <nd_obj2> (55)
        on left: 23 24
        on right: 20
    expression <nd_obj2> (56)
        on left: 25 26
        on right: 21 22 25 33
    term <nd_obj> (57)
        on left: 27 28
        on right: 25 26 27
    factor <nd_obj> (58)
        on left: 29 30 31
        on right: 27 28
    base <nd_obj> (59)
        on left: 32 33
        on right: 29 31
    exponent <nd_obj> (60)
        on left: 34
        on right: 29
    mulops <nd_obj> (61)
        on left: 35 36
        on right: 27
    addops <nd_obj> (62)
        on left: 37 38
        on right: 25
    relop <nd_obj> (63)
        on left: 39 40 41 42 43 44
        on right: 17 22
    value <nd_obj2> (64)
        on left: 45 46 47
        on right: 17 23 30 32 48
    return <nd_obj> (65)
        on left: 48 49
        on right: 1


State 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    program   go to state 4
    entry     go to state 5
    datatype  go to state 6


State 1

    3 datatype: INT .

    $default  reduce using rule 3 (datatype)


State 2

    4 datatype: FLOAT .

    $default  reduce using rule 4 (datatype)


State 3

    5 datatype: CHAR .

    $default  reduce using rule 5 (datatype)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 7


State 5

    1 program: entry . '(' ')' '{' body return '}'

    '('  shift, and go to state 8


State 6

    2 entry: datatype . ID

    ID  shift, and go to state 9


State 7

    0 $accept: program $end .

    $default  accept


State 8

    1 program: entry '(' . ')' '{' body return '}'

    ')'  shift, and go to state 10


State 9

    2 entry: datatype ID .

    $default  reduce using rule 2 (entry)


State 10

    1 program: entry '(' ')' . '{' body return '}'

    '{'  shift, and go to state 11


State 11

    1 program: entry '(' ')' '{' . body return '}'

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 18
    block      go to state 19
    statement  go to state 20


State 12

   20 statement: DECLARE . ID datatype init

    ID  shift, and go to state 21


State 13

   13 block: PRINTFF . '(' STR ')' '.'

    '('  shift, and go to state 22


State 14

   14 block: SCANFF . '(' STR ',' '&' ID ')' '.'

    '('  shift, and go to state 23


State 15

    8 block: WHILE . '(' condition ')' ':' '{' body '}'

    '('  shift, and go to state 24


State 16

   11 block: IF . '(' condition ')' $@1 ':' '{' body '}' $@2 else

    '('  shift, and go to state 25


State 17

   21 statement: ID . '=' expression
   22          | ID . relop expression

    LE   shift, and go to state 26
    GE   shift, and go to state 27
    EQ   shift, and go to state 28
    NE   shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    '='  shift, and go to state 32

    relop  go to state 33


State 18

    1 program: entry '(' ')' '{' body . return '}'

    RETURN  shift, and go to state 34

    $default  reduce using rule 49 (return)

    return  go to state 35


State 19

    6 body: block . body

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 36
    block      go to state 19
    statement  go to state 20


State 20

   12 block: statement . '.'

    '.'  shift, and go to state 37


State 21

   20 statement: DECLARE ID . datatype init

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3

    datatype  go to state 38


State 22

   13 block: PRINTFF '(' . STR ')' '.'

    STR  shift, and go to state 39


State 23

   14 block: SCANFF '(' . STR ',' '&' ID ')' '.'

    STR  shift, and go to state 40


State 24

    8 block: WHILE '(' . condition ')' ':' '{' body '}'

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    condition  go to state 46
    value      go to state 47


State 25

   11 block: IF '(' . condition ')' $@1 ':' '{' body '}' $@2 else

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    condition  go to state 48
    value      go to state 47


State 26

   41 relop: LE .

    $default  reduce using rule 41 (relop)


State 27

   42 relop: GE .

    $default  reduce using rule 42 (relop)


State 28

   43 relop: EQ .

    $default  reduce using rule 43 (relop)


State 29

   44 relop: NE .

    $default  reduce using rule 44 (relop)


State 30

   40 relop: GT .

    $default  reduce using rule 40 (relop)


State 31

   39 relop: LT .

    $default  reduce using rule 39 (relop)


State 32

   21 statement: ID '=' . expression

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 49
    '('        shift, and go to state 50

    expression  go to state 51
    term        go to state 52
    factor      go to state 53
    base        go to state 54
    value       go to state 55


State 33

   22 statement: ID relop . expression

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 49
    '('        shift, and go to state 50

    expression  go to state 56
    term        go to state 52
    factor      go to state 53
    base        go to state 54
    value       go to state 55


State 34

   48 return: RETURN . value '.'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 57


State 35

    1 program: entry '(' ')' '{' body return . '}'

    '}'  shift, and go to state 58


State 36

    6 body: block body .

    $default  reduce using rule 6 (body)


State 37

   12 block: statement '.' .

    $default  reduce using rule 12 (block)


State 38

   20 statement: DECLARE ID datatype . init

    '='  shift, and go to state 59

    $default  reduce using rule 24 (init)

    init  go to state 60


State 39

   13 block: PRINTFF '(' STR . ')' '.'

    ')'  shift, and go to state 61


State 40

   14 block: SCANFF '(' STR . ',' '&' ID ')' '.'

    ','  shift, and go to state 62


State 41

   18 condition: TRUE .

    $default  reduce using rule 18 (condition)


State 42

   19 condition: FALSE .

    $default  reduce using rule 19 (condition)


State 43

   45 value: NUMBER .

    $default  reduce using rule 45 (value)


State 44

   46 value: FLOAT_NUM .

    $default  reduce using rule 46 (value)


State 45

   47 value: ID .

    $default  reduce using rule 47 (value)


State 46

    8 block: WHILE '(' condition . ')' ':' '{' body '}'

    ')'  shift, and go to state 63


State 47

   17 condition: value . relop value

    LE  shift, and go to state 26
    GE  shift, and go to state 27
    EQ  shift, and go to state 28
    NE  shift, and go to state 29
    GT  shift, and go to state 30
    LT  shift, and go to state 31

    relop  go to state 64


State 48

   11 block: IF '(' condition . ')' $@1 ':' '{' body '}' $@2 else

    ')'  shift, and go to state 65


State 49

   30 factor: LOG . '(' value ',' value ')'

    '('  shift, and go to state 66


State 50

   33 base: '(' . expression ')'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 49
    '('        shift, and go to state 50

    expression  go to state 67
    term        go to state 52
    factor      go to state 53
    base        go to state 54
    value       go to state 55


State 51

   21 statement: ID '=' expression .
   25 expression: expression . addops term

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 21 (statement)

    addops  go to state 70


State 52

   26 expression: term .
   27 term: term . mulops factor

    MULT  shift, and go to state 71
    DIV   shift, and go to state 72

    $default  reduce using rule 26 (expression)

    mulops  go to state 73


State 53

   28 term: factor .

    $default  reduce using rule 28 (term)


State 54

   29 factor: base . exponent base
   31       | base .

    POW  shift, and go to state 74

    $default  reduce using rule 31 (factor)

    exponent  go to state 75


State 55

   32 base: value .

    $default  reduce using rule 32 (base)


State 56

   22 statement: ID relop expression .
   25 expression: expression . addops term

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 22 (statement)

    addops  go to state 70


State 57

   48 return: RETURN value . '.'

    '.'  shift, and go to state 76


State 58

    1 program: entry '(' ')' '{' body return '}' .

    $default  reduce using rule 1 (program)


State 59

   23 init: '=' . value

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 77


State 60

   20 statement: DECLARE ID datatype init .

    $default  reduce using rule 20 (statement)


State 61

   13 block: PRINTFF '(' STR ')' . '.'

    '.'  shift, and go to state 78


State 62

   14 block: SCANFF '(' STR ',' . '&' ID ')' '.'

    '&'  shift, and go to state 79


State 63

    8 block: WHILE '(' condition ')' . ':' '{' body '}'

    ':'  shift, and go to state 80


State 64

   17 condition: value relop . value

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 81


State 65

   11 block: IF '(' condition ')' . $@1 ':' '{' body '}' $@2 else

    $default  reduce using rule 9 ($@1)

    $@1  go to state 82


State 66

   30 factor: LOG '(' . value ',' value ')'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 83


State 67

   25 expression: expression . addops term
   33 base: '(' expression . ')'

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    ')'  shift, and go to state 84

    addops  go to state 70


State 68

   37 addops: ADD .

    $default  reduce using rule 37 (addops)


State 69

   38 addops: SUB .

    $default  reduce using rule 38 (addops)


State 70

   25 expression: expression addops . term

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 49
    '('        shift, and go to state 50

    term    go to state 85
    factor  go to state 53
    base    go to state 54
    value   go to state 55


State 71

   35 mulops: MULT .

    $default  reduce using rule 35 (mulops)


State 72

   36 mulops: DIV .

    $default  reduce using rule 36 (mulops)


State 73

   27 term: term mulops . factor

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    LOG        shift, and go to state 49
    '('        shift, and go to state 50

    factor  go to state 86
    base    go to state 54
    value   go to state 55


State 74

   34 exponent: POW .

    $default  reduce using rule 34 (exponent)


State 75

   29 factor: base exponent . base

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45
    '('        shift, and go to state 50

    base   go to state 87
    value  go to state 55


State 76

   48 return: RETURN value '.' .

    $default  reduce using rule 48 (return)


State 77

   23 init: '=' value .

    $default  reduce using rule 23 (init)


State 78

   13 block: PRINTFF '(' STR ')' '.' .

    $default  reduce using rule 13 (block)


State 79

   14 block: SCANFF '(' STR ',' '&' . ID ')' '.'

    ID  shift, and go to state 88


State 80

    8 block: WHILE '(' condition ')' ':' . '{' body '}'

    '{'  shift, and go to state 89


State 81

   17 condition: value relop value .

    $default  reduce using rule 17 (condition)


State 82

   11 block: IF '(' condition ')' $@1 . ':' '{' body '}' $@2 else

    ':'  shift, and go to state 90


State 83

   30 factor: LOG '(' value . ',' value ')'

    ','  shift, and go to state 91


State 84

   33 base: '(' expression ')' .

    $default  reduce using rule 33 (base)


State 85

   25 expression: expression addops term .
   27 term: term . mulops factor

    MULT  shift, and go to state 71
    DIV   shift, and go to state 72

    $default  reduce using rule 25 (expression)

    mulops  go to state 73


State 86

   27 term: term mulops factor .

    $default  reduce using rule 27 (term)


State 87

   29 factor: base exponent base .

    $default  reduce using rule 29 (factor)


State 88

   14 block: SCANFF '(' STR ',' '&' ID . ')' '.'

    ')'  shift, and go to state 92


State 89

    8 block: WHILE '(' condition ')' ':' '{' . body '}'

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 93
    block      go to state 19
    statement  go to state 20


State 90

   11 block: IF '(' condition ')' $@1 ':' . '{' body '}' $@2 else

    '{'  shift, and go to state 94


State 91

   30 factor: LOG '(' value ',' . value ')'

    NUMBER     shift, and go to state 43
    FLOAT_NUM  shift, and go to state 44
    ID         shift, and go to state 45

    value  go to state 95


State 92

   14 block: SCANFF '(' STR ',' '&' ID ')' . '.'

    '.'  shift, and go to state 96


State 93

    8 block: WHILE '(' condition ')' ':' '{' body . '}'

    '}'  shift, and go to state 97


State 94

   11 block: IF '(' condition ')' $@1 ':' '{' . body '}' $@2 else

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 98
    block      go to state 19
    statement  go to state 20


State 95

   30 factor: LOG '(' value ',' value . ')'

    ')'  shift, and go to state 99


State 96

   14 block: SCANFF '(' STR ',' '&' ID ')' '.' .

    $default  reduce using rule 14 (block)


State 97

    8 block: WHILE '(' condition ')' ':' '{' body '}' .

    $default  reduce using rule 8 (block)


State 98

   11 block: IF '(' condition ')' $@1 ':' '{' body . '}' $@2 else

    '}'  shift, and go to state 100


State 99

   30 factor: LOG '(' value ',' value ')' .

    $default  reduce using rule 30 (factor)


State 100

   11 block: IF '(' condition ')' $@1 ':' '{' body '}' . $@2 else

    $default  reduce using rule 10 ($@2)

    $@2  go to state 101


State 101

   11 block: IF '(' condition ')' $@1 ':' '{' body '}' $@2 . else

    ELSE  shift, and go to state 102

    $default  reduce using rule 16 (else)

    else  go to state 103


State 102

   15 else: ELSE . ':' '{' body '}'

    ':'  shift, and go to state 104


State 103

   11 block: IF '(' condition ')' $@1 ':' '{' body '}' $@2 else .

    $default  reduce using rule 11 (block)


State 104

   15 else: ELSE ':' . '{' body '}'

    '{'  shift, and go to state 105


State 105

   15 else: ELSE ':' '{' . body '}'

    DECLARE  shift, and go to state 12
    PRINTFF  shift, and go to state 13
    SCANFF   shift, and go to state 14
    WHILE    shift, and go to state 15
    IF       shift, and go to state 16
    ID       shift, and go to state 17

    $default  reduce using rule 7 (body)

    body       go to state 106
    block      go to state 19
    statement  go to state 20


State 106

   15 else: ELSE ':' '{' body . '}'

    '}'  shift, and go to state 107


State 107

   15 else: ELSE ':' '{' body '}' .

    $default  reduce using rule 15 (else)
